{"version":3,"sources":["components/dashboard/components/DragDrop.js","components/dashboard/functions/chartBuilders.functions.js","components/dashboard/components/charts/KPI/KpiForks.js","components/dashboard/components/charts/KPI/KpiRepos.js","components/dashboard/components/charts/KPI/KpiStars.js","components/dashboard/components/charts/KPI/KpiForksTotal.js","components/dashboard/components/charts/KPI/KpiArchived.js","components/dashboard/components/charts/KPI/KpiNotArchived.js","components/dashboard/components/charts/pie/pie.options.js","components/dashboard/components/charts/pie/Pie.js","components/dashboard/components/charts/area/Area.js","components/dashboard/components/charts/area/area.options.js","components/dashboard/components/charts/worldcloud/wordcould.options.js","components/dashboard/components/charts/worldcloud/Wordcould.js","components/dashboard/components/charts/bar/Bar.js","components/dashboard/components/charts/bar/bar.options.js","components/dashboard/components/tables/repoTable.options.js","components/dashboard/components/tables/RepoTable.js","components/dashboard/components/Spinner.js","components/dashboard/Dashboard.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["DragDrop","child","data","resize","disableDragging","reset","useState","x","y","width","height","state","setState","childWithProps","React","cloneElement","yPie","tooltip","mapper","title","legend","minHeight","maxHeight","minWidth","style","background","boxShadow","onResize","e","direction","ref","delta","position","offsetHeight","offsetWidth","default","mapPieData","map","obj","name","filter","mapWordcloudData","watchers_count","weight","html_url","formatNumber","num","toString","replace","KpiForks","fork","length","forkedReposCount","count","elevation","color","textAlign","fill","xs","sm","md","lg","KpiRepos","reposCount","KpiStars","reduce","acc","curr","stargazers_count","starsTotal","KpiForksTotal","forks_count","forkedTotal","KpiArchived","archived","archivedReposCount","KpiNotArchived","notArchivedReposCount","options","text","subtitle","chart","backgroundColor","plotBackgroundColor","plotBorderWidth","plotShadow","type","align","verticalAlign","layout","navigation","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","credits","responsive","rules","condition","maxWidth","chartOptions","pointFormat","Pie","highcharts","Highcharts","optionsMerge","allowChartUpdate","require","isNaN","series","colorByPoint","Area","set","Set","Map","forEach","created_at","add","Date","getFullYear","years","Array","from","sort","a","b","year","get","dataToViz","mapToArea","op","area","pointStart","marker","symbol","radius","states","hover","xAxis","allowDecimals","categories","yAxis","wordcloud","events","click","event","window","open","point","focus","Worldcould","Bar","counter","language","keys","Object","languages","values","key","holder","indexOf","languageCounter","crosshair","headerFormat","shared","useHTML","column","pointPadding","borderWidth","dateComparator","date1","date2","formatedNumberComparator","num1","num2","split","join","columnDefs","headerName","field","comparator","sortable","cellRenderer","value","urlAsArr","RepoTable","rowData","defaultColDef","resizable","className","updated_at","size","watchers","open_issues_count","moment","format","Spinner","padding","spinning","duration","Dashboard","URLSearchParams","location","search","err","setSate","useEffect","getData","bind","page","dialog","dashboardPage","d","res","i","fetch","json","push","console","error","Home","placeholder","rows","id","onClick","to","pathname","document","getElementById","App","path","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d67f91d6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Rnd } from 'react-rnd'\n\nexport default function DragDrop({\n  child,\n  data,\n  resize,\n  disableDragging,\n  ...reset\n}) {\n  const [state, setState] = useState({\n    x: reset.x,\n    y: reset.y,\n    width: '100%',\n    height: 500\n  })\n\n  const { height, x, y, width } = state\n  const childWithProps = React.cloneElement(child, {\n    height,\n    width,\n    data,\n    y: reset.yPie,\n    tooltip: reset.tooltip,\n    mapper: reset.mapper,\n    title: reset.title,\n    legend: reset.legend\n  })\n  return (\n    <Rnd\n      minHeight={height}\n      disableDragging={disableDragging || false}\n      maxHeight={resize ? height : null}\n      minWidth={'50%'}\n      style={{ background: '#181818', boxShadow: '0px 0px 10px #595959' }}\n      onResize={(e, direction, ref, delta, position) => {\n        setState({\n          ...reset,\n          height: ref.offsetHeight,\n          width: ref.offsetWidth\n        })\n      }}\n      default={{\n        x,\n        y,\n        width,\n        height,\n        minHeight: 500\n      }}\n    >\n      {childWithProps}\n    </Rnd>\n  )\n}\n","const mapPieData = (data = [], y = 'stargazers_count', mapper) =>\n  data\n    .map((obj) => ({\n      name: obj.name,\n      y: mapper ? mapper(obj[y]) : obj[y]\n    }))\n    .filter(({ y }) => y > 0)\n\nconst mapWordcloudData = (data = []) =>\n  data.map(({ watchers_count, name, html_url }) => ({\n    name,\n    weight: 1,\n    html_url\n  }))\n\nconst forkedReposCount = (data = []) =>\n  formatNumber(data.filter(({ fork }) => fork).length)\nconst reposCount = (data = []) =>\n  formatNumber(data.filter(({ fork }) => !fork).length)\nconst starsTotal = (data = []) =>\n  formatNumber(\n    data.reduce((acc, curr) => acc + (curr.stargazers_count || 0), 0)\n  )\n\nconst archivedReposCount = (data = []) =>\n  formatNumber(data.filter(({ archived }) => archived).length)\n\nconst notArchivedReposCount = (data = []) =>\n  formatNumber(data.filter(({ archived }) => !archived).length)\n\nconst forkedTotal = (data = []) =>\n  formatNumber(data.reduce((acc, curr) => acc + (curr.forks_count || 0), 0))\n\nconst mapToArea = (data) => {\n  const set = new Set()\n  const map = new Map()\n  data.forEach(({ created_at }) => set.add(new Date(created_at).getFullYear()))\n  const years = Array.from(set).sort((a, b) => a - b)\n  data.forEach(({ created_at }) => {\n    const year = new Date(created_at).getFullYear()\n    map.set(year, (map.get(year) || 0) + 1)\n  })\n  const dataToViz = years.map((year) => map.get(year))\n  return { years, dataToViz }\n}\n\nconst languageCounter = (data = []) => {\n  const counter = {}\n  data\n    .filter(({ language }) => language)\n    .forEach(({ language }) => {\n      counter[language] = (counter[language] || 0) + 1\n    })\n\n  const keys = Object.keys(counter)\n  return {\n    languages: keys,\n    values: keys.map((key) => {\n      const holder = Array.from({ length: keys.length }).fill(0)\n      holder[keys.indexOf(key)] = counter[key]\n      return {\n        name: key,\n        data: holder\n      }\n    })\n  }\n}\n\nconst formatNumber = (num) =>\n  num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n\nexport {\n  mapWordcloudData,\n  mapPieData,\n  forkedReposCount,\n  reposCount,\n  mapToArea,\n  starsTotal,\n  forkedTotal,\n  languageCounter,\n  archivedReposCount,\n  notArchivedReposCount,\n  formatNumber\n}\n","import React, { useState } from 'react'\nimport { forkedReposCount } from '../../../functions/chartBuilders.functions'\nimport { WiredCard } from 'wired-card'\nimport { Row, Col } from 'react-grid-system'\n\nexport default function KpiForks({ data }) {\n  const [count] = useState(forkedReposCount(data))\n  return (\n    <wired-card\n      elevation=\"3\"\n      style={{ width: '100%', color: '#fff', textAlign: 'center' }}\n      fill={'#1C2D44'}\n    >\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={12}>\n          <h1>{count} Repositories Forked By This User</h1>\n        </Col>\n      </Row>\n    </wired-card>\n  )\n}\n","import React, { useState } from 'react'\nimport { WiredCard } from 'wired-card'\nimport { reposCount } from '../../../functions/chartBuilders.functions'\nimport { Row, Col } from 'react-grid-system'\n\nexport default function KpiRepos({ data }) {\n  const [count] = useState(reposCount(data))\n  return (\n    <wired-card\n      elevation=\"3\"\n      style={{ width: '100%', color: '#fff', textAlign: 'center' }}\n      fill={'#591228'}\n    >\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={12}>\n          <h1>{count} Repositories Created By this user</h1>\n        </Col>\n      </Row>\n    </wired-card>\n  )\n}\n","import React, { useState } from 'react'\nimport { starsTotal } from '../../../functions/chartBuilders.functions'\nimport { WiredCard } from 'wired-card'\nimport { Row, Col } from 'react-grid-system'\n\nexport default function KpiStars({ data }) {\n  const [count] = useState(starsTotal(data))\n  return (\n    <wired-card\n      elevation=\"3\"\n      style={{ width: '100%', color: '#fff', textAlign: 'center' }}\n      fill={'#992E3F'}\n    >\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={12}>\n          <h1>{count} Total Stars</h1>\n        </Col>\n      </Row>\n    </wired-card>\n  )\n}\n","import React, { useState } from 'react'\nimport { forkedTotal } from '../../../functions/chartBuilders.functions'\nimport { WiredCard } from 'wired-card'\nimport { Row, Col } from 'react-grid-system'\n\nexport default function KpiForksTotal({ data }) {\n  const [count] = useState(forkedTotal(data))\n  return (\n    <wired-card\n      elevation=\"3\"\n      style={{ width: '100%', color: '#fff', textAlign: 'center' }}\n      fill={'#A64F03'}\n    >\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={12}>\n          <h1>{count} times his/her repos have been Forked</h1>\n        </Col>\n      </Row>\n    </wired-card>\n  )\n}\n","import React, { useState } from 'react'\nimport { archivedReposCount } from '../../../functions/chartBuilders.functions'\nimport { WiredCard } from 'wired-card'\nimport { Row, Col } from 'react-grid-system'\n\nexport default function KpiArchived({ data }) {\n  const [count] = useState(archivedReposCount(data))\n  return (\n    <wired-card\n      elevation=\"3\"\n      style={{ width: '100%', color: '#fff', textAlign: 'center' }}\n      fill={'#424370'}\n    >\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={12}>\n          <h1>{count} archived Repos Count</h1>\n        </Col>\n      </Row>\n    </wired-card>\n  )\n}\n","import React, { useState } from 'react'\nimport { notArchivedReposCount } from '../../../functions/chartBuilders.functions'\nimport { WiredCard } from 'wired-card'\nimport { Row, Col } from 'react-grid-system'\n\nexport default function KpiNotArchived({ data }) {\n  const [count] = useState(notArchivedReposCount(data))\n  return (\n    <wired-card\n      elevation=\"3\"\n      style={{ width: '100%', color: '#fff', textAlign: 'center' }}\n      fill={'#730220'}\n    >\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={12}>\n          <h1>{count} active Repos Count</h1>\n        </Col>\n      </Row>\n    </wired-card>\n  )\n}\n","const options = {\n  title: {\n    text: 'Stars by Repository'\n  },\n  subtitle: {\n    text: 'Source: GitHub public API'\n  },\n  chart: {\n    height: 500,\n    backgroundColor: null,\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n    // width: '100vw'\n  },\n\n  legend: {\n    align: 'right',\n    verticalAlign: 'top',\n    layout: 'vertical',\n    navigation: {\n      style: {\n        color: '#fff'\n      }\n    }\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true\n      },\n      showInLegend: true\n    }\n  },\n  credits: {\n    enabled: false\n  },\n  responsive: {\n    rules: [\n      {\n        condition: {\n          maxWidth: 500\n        },\n        plotOptions: {\n          pie: {\n            showInLegend: false\n          }\n        },\n        chartOptions: {\n          legend: {\n            enabled: false\n          }\n        }\n      }\n    ]\n  },\n  tooltip: {\n    pointFormat: 'number of 🌟: <b>{point.y}</b>'\n  }\n}\n\nexport { options }\n","import React from 'react'\nimport { mapPieData } from '../../../functions/chartBuilders.functions'\nimport HighchartsReact from 'highcharts-react-official'\nimport { options } from './pie.options'\nimport Highcharts from 'highcharts'\nrequire('highcharts/themes/dark-unica')(Highcharts)\n\nexport default function Pie({\n  width,\n  height,\n  data,\n  y,\n  tooltip,\n  mapper,\n  title,\n  legend\n}) {\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={optionsMerge(\n        width,\n        height,\n        data,\n        y,\n        tooltip,\n        mapper,\n        title,\n        legend\n      )}\n      allowChartUpdate={true}\n    />\n  )\n}\n\nconst optionsMerge = (\n  width,\n  height,\n  data,\n  y,\n  tooltip,\n  mapper,\n  title,\n  legend\n) => ({\n  ...options,\n  title: {\n    text: title || options.title.text\n  },\n  chart: {\n    ...options.chart,\n    height,\n    width: isNaN(width) ? null : width\n  },\n  plotOptions: {\n    pie: {\n      ...options.plotOptions.pie,\n      showInLegend: width < 650 ? false : legend\n    }\n  },\n  tooltip: {\n    ...(tooltip || options.tooltip)\n  },\n  series: [{ colorByPoint: true, data: mapPieData(data, y, mapper) }]\n})\n","import React from 'react'\nimport { mapToArea } from '../../../functions/chartBuilders.functions'\nimport { options } from './area.options'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nexport default function Area({ width, height, data }) {\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={optionsMerge(width, height, data)}\n      allowChartUpdate={true}\n    />\n  )\n}\n\nconst optionsMerge = (width, height, data) => {\n  const { years, dataToViz } = mapToArea(data)\n  const op = options(years[0])\n  return {\n    ...op,\n    chart: {\n      ...op.chart,\n      height,\n      width: isNaN(width) ? null : width\n    },\n    xAxis: {\n      allowDecimals: false,\n      title: {\n        text: 'Years'\n      },\n      categories: years\n    },\n    yAxis: {\n      title: {\n        text: 'Nuclear weapon states'\n      }\n    },\n\n    series: [{ name: 'Repositories', data: dataToViz }]\n  }\n}\n","const options = ({ pointStart }) => ({\n  title: {\n    text: 'Repositories Rate By Years'\n  },\n  subtitle: {\n    text: 'Source: GitHub public API'\n  },\n  chart: {\n    height: 500,\n    backgroundColor: null,\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'area'\n  },\n  credits: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      pointStart,\n      cursor: 'pointer',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n        states: {\n          hover: {\n            enabled: true\n          }\n        }\n      }\n    }\n  },\n  tooltip: {\n    pointFormat: 'You have created {point.y} repos in this date'\n  }\n})\n\nexport { options }\n","const options = {\n  title: {\n    text: 'All Repositories'\n  },\n  subtitle: {\n    text: 'Source: GitHub public API'\n  },\n  chart: {\n    height: 500,\n    backgroundColor: null,\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false\n    // width: '100vw'\n  },\n  credits: {\n    enabled: false\n  },\n  plotOptions: {\n    wordcloud: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true\n      }\n    },\n    series: {\n      cursor: 'pointer',\n      events: {\n        click: (event) => window.open(event.point.html_url, '_blank').focus()\n      }\n    }\n  },\n\n  tooltip: {\n    enabled: false,\n    pointFormat: 'number of 👁️: <b>{point.weight}</b>'\n  }\n}\n\nexport { options }\n","import React from 'react'\nimport { mapWordcloudData } from '../../../functions/chartBuilders.functions'\nimport HighchartsReact from 'highcharts-react-official'\nimport { options } from './wordcould.options'\nimport Highcharts from 'highcharts'\nrequire('highcharts/modules/wordcloud')(Highcharts)\nrequire('highcharts/modules/boost')(Highcharts)\n\nexport default function Worldcould({ width, height, data }) {\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={optionsMerge(width, height, data)}\n      allowChartUpdate={true}\n    />\n  )\n}\nconst optionsMerge = (width, height, data) => ({\n  ...options,\n  chart: {\n    ...options.chart,\n    height,\n    width: isNaN(width) ? null : width\n  },\n  series: [\n    { colorByPoint: true, data: mapWordcloudData(data), type: 'wordcloud' }\n  ]\n})\n","import React from 'react'\nimport { languageCounter } from '../../../functions/chartBuilders.functions'\nimport HighchartsReact from 'highcharts-react-official'\nimport { options } from './bar.options'\nimport Highcharts from 'highcharts'\nrequire('highcharts/modules/wordcloud')(Highcharts)\nrequire('highcharts/modules/boost')(Highcharts)\n\nexport default function Bar({ width, height, data }) {\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={optionsMerge(width, height, data)}\n      allowChartUpdate={true}\n    />\n  )\n}\nconst optionsMerge = (width, height, data) => {\n  const { languages, values } = languageCounter(data)\n  const op = options(languages)\n  return {\n    ...op,\n    chart: {\n      ...op.chart,\n      height,\n      width: isNaN(width) ? null : width\n    },\n    series: values\n  }\n}\n","const options = (categories) => ({\n  chart: {\n    type: 'column',\n    backgroundColor: null\n  },\n  title: {\n    text: 'Repositories By Language'\n  },\n  subtitle: {\n    text: 'Source: GitHub public API'\n  },\n  credits: {\n    enabled: false\n  },\n  xAxis: {\n    categories: [...categories],\n    crosshair: true\n  },\n  tooltip: {\n    cursor: 'pointer',\n    headerFormat: '<span style=\"font-size:10px\">Info</span><br />',\n    pointFormat:\n      '<span style=\"color:{series.color};padding:0\">{series.name}</span>: <b>{point.y}</b> repo',\n    shared: false,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0.2,\n      borderWidth: 0,\n      cursor: 'pointer'\n    }\n  }\n})\n\nexport { options }\n","const dateComparator = (date1, date2) => new Date(date1) - new Date(date2)\nconst formatedNumberComparator = (num1, num2) =>\n  +num1.split(',').join('') - +num2.split(',').join('')\n\nconst columnDefs = [\n  {\n    headerName: 'Repository Name',\n    field: 'name'\n  },\n  {\n    headerName: 'Created At',\n    field: 'created_at',\n    comparator: dateComparator\n  },\n  {\n    headerName: 'Updated At',\n    field: 'updated_at',\n    comparator: dateComparator\n  },\n  {\n    headerName: 'Size',\n    field: 'size'\n  },\n  {\n    headerName: 'Stars Count',\n    field: 'stargazers_count',\n    comparator: formatedNumberComparator\n  },\n  {\n    headerName: 'Watchers Count',\n    field: 'watchers_count',\n    comparator: formatedNumberComparator\n  },\n  {\n    headerName: 'URL',\n    field: 'html_url',\n    sortable: false,\n    cellRenderer: ({ value }) => {\n      const urlAsArr = value.split('/')\n      return `<a href=\"${value}\" target=\"_blank\" rel=\"noopener\">${\n        urlAsArr[urlAsArr.length - 1]\n      }</a>`\n    }\n  },\n  {\n    headerName: 'Is Forked?',\n    field: 'fork'\n  },\n  {\n    headerName: 'Language',\n    field: 'language'\n  },\n  {\n    headerName: 'Description',\n    field: 'description'\n  },\n  {\n    headerName: 'Has Issues',\n    field: 'has_issues'\n  },\n  {\n    headerName: 'Forks Count',\n    field: 'forks_count',\n    comparator: formatedNumberComparator\n  },\n  {\n    headerName: 'Open Issues Count',\n    field: 'open_issues_count',\n    comparator: formatedNumberComparator\n  },\n  {\n    headerName: 'Watchers',\n    field: 'watchers',\n    comparator: formatedNumberComparator\n  }\n]\n\nexport { columnDefs }\n","import React, { useState } from 'react'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css'\nimport { columnDefs } from './repoTable.options'\nimport { formatNumber } from '../../functions/chartBuilders.functions'\nimport * as moment from 'moment'\n\nexport default function RepoTable({ data }) {\n  const [state] = useState({\n    columnDefs,\n    rowData: mapper(data),\n    defaultColDef: {\n      width: 170,\n      sortable: true,\n      resizable: true\n    }\n  })\n  return (\n    <div\n      className=\"ag-theme-alpine-dark\"\n      style={{\n        height: '500px',\n        width: '100%'\n      }}\n    >\n      <AgGridReact\n        columnDefs={state.columnDefs}\n        rowData={state.rowData}\n        defaultColDef={state.defaultColDef}\n      ></AgGridReact>\n    </div>\n  )\n}\n\nconst mapper = (data = []) =>\n  data.map(\n    ({\n      created_at,\n      watchers_count,\n      stargazers_count,\n      updated_at,\n      size,\n      forks_count,\n      watchers,\n      open_issues_count,\n      ...reset\n    }) => ({\n      created_at: moment(new Date(created_at)).format('ll'),\n      updated_at: moment(new Date(updated_at)).format('ll'),\n      size: `${size / 1000} MB`,\n      stargazers_count: formatNumber(stargazers_count),\n      watchers_count: formatNumber(watchers_count),\n      forks_count: formatNumber(forks_count),\n      open_issues_count: formatNumber(open_issues_count),\n      watchers: formatNumber(watchers),\n      ...reset\n    })\n  )\n","import React from 'react'\nimport { Row, Col } from 'react-grid-system'\nimport { WiredSpinner } from 'wired-spinner'\n\nexport default function Spinner() {\n  return (\n    <Row>\n      <Col sm={12}>\n        <section style={{ textAlign: 'center' }}>\n          <div style={{ padding: '10px' }}>\n            <wired-spinner spinning duration=\"1000\"></wired-spinner>\n          </div>\n          <div>\n            <b>\n              This might take some time please wait we are traversing through\n              the api pages, we will only go to 10 pages (1000 repo)...\n            </b>\n          </div>\n        </section>\n      </Col>\n    </Row>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport RadioButtons from './components/RadioButtons'\nimport DragDrop from './components/DragDrop'\nimport KpiForks from './components/charts/KPI/KpiForks'\nimport KpiRepos from './components/charts/KPI/KpiRepos'\nimport KpiStars from './components/charts/KPI/KpiStars'\nimport KpiForksTotal from './components/charts/KPI/KpiForksTotal'\nimport KpiArchived from './components/charts/KPI/KpiArchived'\nimport KpiNotArchived from './components/charts/KPI/KpiNotArchived'\nimport Pie from './components/charts/pie/Pie'\nimport Area from './components/charts/area/Area'\nimport Worldcould from './components/charts/worldcloud/Wordcould'\nimport Bar from './components/charts/bar/Bar'\nimport RepoTable from './components/tables/RepoTable'\nimport { Row, Col } from 'react-grid-system'\nimport Spinner from './components/Spinner'\nimport { WiredDialog } from 'wired-dialog'\n\nexport default function Dashboard() {\n  const query = new URLSearchParams(window.location.search)\n  const name = query.get('name')\n  const [state, setSate] = useState({ data: null, err: false })\n  useEffect(() => {\n    getData(setSate.bind(Dashboard), name)\n  }, [])\n  let page = null\n  let dialog = null\n  if (!state.data) {\n    page = <Spinner />\n  } else {\n    page = dashboardPage(state.data)\n  }\n  if (state.err) {\n    dialog = (\n      <wired-dialog open={!state.err} elevation={5}>\n        <h1>Oops! :(</h1>\n        <p>\n          <b>\n            looks like we sent too many request, plz come back later after 1\n            hour. ( most likely )\n          </b>\n          {/* aka we sent more than one request in 1 hour */}\n        </p>\n        <p>\n          or something I have no idea about happened and my code does not handle\n          it.\n        </p>\n        <div style={{ textAlign: 'center', padding: '30px 16px 16px' }}>\n          {/* <wired-button id=\"closeDialog\">Close dialog</wired-button> */}\n        </div>\n      </wired-dialog>\n    )\n  }\n  return (\n    <section>\n      {page}\n      {dialog}\n    </section>\n  )\n}\n\nconst dashboardPage = (data) => (\n  <section>\n    {/* <RadioButtons></RadioButtons> */}\n    <Row>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <KpiRepos data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <KpiForks data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <KpiStars data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <KpiForksTotal data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <KpiArchived data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <KpiNotArchived data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <DragDrop child={<Worldcould />} y={70} x={0} data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <DragDrop\n          child={<Pie />}\n          y={70}\n          x={10}\n          data={data}\n          yPie={'size'}\n          mapper={(d) => d / 1000}\n          tooltip={{ pointFormat: 'Size in MB: <b>{point.y}</b>' }}\n          title={'Repository by Size in megabyte'}\n          legend={false}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12} sm={12} md={12} lg={12}>\n        <DragDrop\n          child={<Pie />}\n          y={670}\n          x={0}\n          data={data}\n          yPie={'stargazers_count'}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12} sm={12} md={12} lg={12}>\n        <DragDrop\n          child={<Pie />}\n          y={1270}\n          x={0}\n          data={data}\n          yPie={'forks_count'}\n          tooltip={{ pointFormat: 'forks count ⛓️: <b>{point.y}</b>' }}\n          title={'Forks by Repository'}\n          // legend={false}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <DragDrop child={<Area />} y={1870} x={0} data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <DragDrop child={<Bar />} y={1870} x={10} data={data} />\n      </Col>\n      <Col xs={12} sm={12} md={12} lg={12}>\n        <DragDrop\n          child={<RepoTable />}\n          y={2470}\n          disableDragging={true}\n          x={0}\n          data={data}\n          resize={false}\n        />\n      </Col>\n    </Row>\n  </section>\n)\n\nconst getData = async (setSate, name) => {\n  try {\n    let res = []\n    for (const i of [...Array(10).keys()]) {\n      const data = await (\n        await fetch(\n          `https://api.github.com/users/${name}/repos?per_page=1000&page=${\n            i + 1\n          }`\n        )\n      ).json()\n      if (data.length === 0) break\n      res.push(...data)\n    }\n    setSate({ data: res, err: false })\n  } catch (error) {\n    console.error(error)\n    setSate({ err: true })\n  }\n}\n","import React, { useState } from 'react'\nimport { WiredTextarea } from 'wired-textarea'\nimport { WiredButton } from 'wired-button'\nimport { Redirect } from 'react-router-dom'\nimport Dashboard from '../dashboard/Dashboard'\nimport { Link } from 'react-router-dom'\n\nexport default function Home() {\n  const [name, setState] = useState(null)\n  const taksim = (e) =>\n    setState(\n      <Redirect\n        to={{\n          pathname: '/dashboard',\n          search: `?name=${document.getElementById('textarea-name').value}`\n        }}\n      >\n        lorem\n      </Redirect>\n    )\n\n  if (name) return name\n\n  return (\n    <section style={{ textAlign: 'center' }}>\n      <div style={{ padding: '10px' }}>\n        <wired-textarea\n          placeholder=\"Github username\"\n          rows=\"6\"\n          id=\"textarea-name\"\n        ></wired-textarea>\n      </div>\n      <div style={{ padding: '10px', textAlign: 'center' }}>\n        {/* <Link to=\"/dashboard\"> */}\n        <wired-button elevation=\"3\" onClick={taksim}>\n          Get my dashbard\n        </wired-button>\n        {/* </Link> */}\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport Home from './components/home/Home'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Dashboard from './components/dashboard/Dashboard'\nimport { Container, Row, Col } from 'react-grid-system'\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Row>\n              <Col sm={12}>\n                <Dashboard />\n              </Col>\n            </Row>\n          </Route>\n          <Route path=\"/\">\n            <Row>\n              <Col sm={12}>\n                <Home />\n              </Col>\n            </Row>\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}